// <auto-generated />
using System;
using Mas_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mas_Project.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20250611091107_MigrationSix")]
    partial class MigrationSix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("GuildMemberTeam", b =>
                {
                    b.Property<Guid>("MembersUserID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Team1TeamID")
                        .HasColumnType("TEXT");

                    b.HasKey("MembersUserID", "Team1TeamID");

                    b.HasIndex("Team1TeamID");

                    b.ToTable("GuildMemberTeam");
                });

            modelBuilder.Entity("Mas_Project.Models.Achievement", b =>
                {
                    b.Property<Guid>("AchievementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ExperienceReward")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AchievementID");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("Mas_Project.Models.DateTaken", b =>
                {
                    b.Property<Guid>("GuildMemberId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuestId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("GuildMemberId", "QuestId");

                    b.HasIndex("QuestId");

                    b.ToTable("DatesTaken");
                });

            modelBuilder.Entity("Mas_Project.Models.DateUnlocked", b =>
                {
                    b.Property<Guid>("GuildMemberId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AchievementId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("GuildMemberId", "AchievementId");

                    b.HasIndex("AchievementId");

                    b.ToTable("DatesUnlocked");
                });

            modelBuilder.Entity("Mas_Project.Models.Mount", b =>
                {
                    b.Property<Guid>("MountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GuildMemberId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MountID");

                    b.HasIndex("GuildMemberId");

                    b.ToTable("Mounts");
                });

            modelBuilder.Entity("Mas_Project.Models.Quest", b =>
                {
                    b.Property<Guid>("QuestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("DurationHours")
                        .HasColumnType("REAL");

                    b.Property<int>("MaxNumberOfParticipants")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("QuestBoardId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Reward")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("QuestID");

                    b.HasIndex("CustomerId");

                    b.HasIndex("QuestBoardId", "Priority")
                        .IsUnique();

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("Mas_Project.Models.QuestBoard", b =>
                {
                    b.Property<Guid>("QuestBoardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("QuestBoardID");

                    b.ToTable("QuestBoards");
                });

            modelBuilder.Entity("Mas_Project.Models.Team", b =>
                {
                    b.Property<Guid>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxNumberOfPlayers")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.HasKey("TeamID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Mas_Project.Models.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("Users", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Mas_Project.Models.Customer", b =>
                {
                    b.HasBaseType("Mas_Project.Models.User");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReputationScore")
                        .HasColumnType("INTEGER");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("Mas_Project.Models.GuildMember", b =>
                {
                    b.HasBaseType("Mas_Project.Models.User");

                    b.Property<int?>("AssignedRoom")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExperiencePoints")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LeadershipStyle")
                        .HasColumnType("TEXT");

                    b.Property<int>("MemberRole")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Relic")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TeamGuid")
                        .HasColumnType("TEXT");

                    b.ToTable("GuildMembers", (string)null);
                });

            modelBuilder.Entity("Mas_Project.Models.Mage", b =>
                {
                    b.HasBaseType("Mas_Project.Models.GuildMember");

                    b.Property<int>("MP")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TeamID")
                        .HasColumnType("TEXT");

                    b.HasIndex("TeamID");

                    b.ToTable("Mages");
                });

            modelBuilder.Entity("Mas_Project.Models.Priest", b =>
                {
                    b.HasBaseType("Mas_Project.Models.GuildMember");

                    b.Property<int>("DivinePower")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TeamID")
                        .HasColumnType("TEXT");

                    b.HasIndex("TeamID");

                    b.ToTable("Priests");
                });

            modelBuilder.Entity("Mas_Project.Models.Warrior", b =>
                {
                    b.HasBaseType("Mas_Project.Models.GuildMember");

                    b.Property<int>("ArmorClass")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TeamID")
                        .HasColumnType("TEXT");

                    b.HasIndex("TeamID");

                    b.ToTable("Warriors");
                });

            modelBuilder.Entity("GuildMemberTeam", b =>
                {
                    b.HasOne("Mas_Project.Models.GuildMember", null)
                        .WithMany()
                        .HasForeignKey("MembersUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Project.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("Team1TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mas_Project.Models.DateTaken", b =>
                {
                    b.HasOne("Mas_Project.Models.GuildMember", "GuildMember")
                        .WithMany("DatesTaken")
                        .HasForeignKey("GuildMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Project.Models.Quest", "Quest")
                        .WithMany("DateTakens")
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuildMember");

                    b.Navigation("Quest");
                });

            modelBuilder.Entity("Mas_Project.Models.DateUnlocked", b =>
                {
                    b.HasOne("Mas_Project.Models.Achievement", "Achievement")
                        .WithMany("DatesUnlocked")
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Project.Models.GuildMember", "GuildMember")
                        .WithMany("DatesUnlocked")
                        .HasForeignKey("GuildMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("GuildMember");
                });

            modelBuilder.Entity("Mas_Project.Models.Mount", b =>
                {
                    b.HasOne("Mas_Project.Models.GuildMember", "GuildMember")
                        .WithMany("Mounts")
                        .HasForeignKey("GuildMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuildMember");
                });

            modelBuilder.Entity("Mas_Project.Models.Quest", b =>
                {
                    b.HasOne("Mas_Project.Models.Customer", "Customer")
                        .WithMany("Quests")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mas_Project.Models.QuestBoard", "QuestBoard")
                        .WithMany("Quests")
                        .HasForeignKey("QuestBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("QuestBoard");
                });

            modelBuilder.Entity("Mas_Project.Models.Customer", b =>
                {
                    b.HasOne("Mas_Project.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Mas_Project.Models.Customer", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mas_Project.Models.GuildMember", b =>
                {
                    b.HasOne("Mas_Project.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Mas_Project.Models.GuildMember", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mas_Project.Models.Mage", b =>
                {
                    b.HasOne("Mas_Project.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID");

                    b.HasOne("Mas_Project.Models.GuildMember", null)
                        .WithOne()
                        .HasForeignKey("Mas_Project.Models.Mage", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Mas_Project.Models.Priest", b =>
                {
                    b.HasOne("Mas_Project.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID");

                    b.HasOne("Mas_Project.Models.GuildMember", null)
                        .WithOne()
                        .HasForeignKey("Mas_Project.Models.Priest", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Mas_Project.Models.Warrior", b =>
                {
                    b.HasOne("Mas_Project.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID");

                    b.HasOne("Mas_Project.Models.GuildMember", null)
                        .WithOne()
                        .HasForeignKey("Mas_Project.Models.Warrior", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Mas_Project.Models.Achievement", b =>
                {
                    b.Navigation("DatesUnlocked");
                });

            modelBuilder.Entity("Mas_Project.Models.Quest", b =>
                {
                    b.Navigation("DateTakens");
                });

            modelBuilder.Entity("Mas_Project.Models.QuestBoard", b =>
                {
                    b.Navigation("Quests");
                });

            modelBuilder.Entity("Mas_Project.Models.Customer", b =>
                {
                    b.Navigation("Quests");
                });

            modelBuilder.Entity("Mas_Project.Models.GuildMember", b =>
                {
                    b.Navigation("DatesTaken");

                    b.Navigation("DatesUnlocked");

                    b.Navigation("Mounts");
                });
#pragma warning restore 612, 618
        }
    }
}
